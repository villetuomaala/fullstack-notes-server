{"version":3,"sources":["components/Note.js","components/Notification.jsx","services/notes.js","App.js","index.js"],"names":["Note","_ref","note","toggleImportance","label","important","react_default","a","createElement","className","content","onClick","Notification","message","services_notes","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","put","Footer","style","color","fontStyle","fontSize","App","_useState","useState","_useState2","Object","slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNote","_useState5","_useState6","showAll","setShowAll","_useState7","_useState8","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","components_Notification","map","components_Note","key","find","n","changedNote","objectSpread","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObj","Date","toISOString","Math","random","createdNote","value","onChange","target","type","App_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.92a2bc4b.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? 'make not important' : 'make important'\n  \n  return (\n    <li className=\"note\">\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  const nonExisting = {\n    id: 666,\n    content: \"HTML is not easy?\",\n    date: \"2019-05-30T17:30:31.098Z\",\n    important: true\n  }\n  return request.then(response => response.data.concat(nonExisting))\n  //return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }","import React, { useState, useEffect} from 'react'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport noteService from './services/notes'\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science, University of Helsinki 2019</em>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('a new note...')\n  const [showAll, setShowAll] = useState(false)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    noteService.getAll()\n      .then(initialNotes => { \n        setNotes(initialNotes)\n      })\n  },[])\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService.update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(`Note ${note.content} was removed from server.`)\n        setTimeout( () => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== note.id))\n      })\n  }\n\n  const rows = () => notesToShow.map(note =>\n    <Note\n      key={note.id}\n      note={note}\n      toggleImportance={() => toggleImportanceOf(note.id)}\n    />\n  )\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important)\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObj = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5\n    }\n\n    noteService.create(noteObj)\n    .then(createdNote => {\n      setNotes(notes.concat(createdNote))\n      setNewNote('')\n    })\n  } \n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          Set showAll to {showAll ? 'false' : 'true'}\n        </button>\n      </div>\n      <ul>\n        {rows()}\n      </ul>\n      <form onSubmit={addNote}> \n        <input value={newNote} onChange={handleNoteChange}/>\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App ","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}